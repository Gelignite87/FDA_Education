    //GIT
git add . / git commit -m "initial" // добавляем все файлы в ГИТ и делаем первый коммит если не делали этого раньше
git checkout master // переходим на главную ветку если мы не в ней
git merge branch_22 // в свою ветку сливаем ветку branch_22
git branch -M main // находясь в ветке master переименовываем её в main
Создаем репозиторий на сайте без README.md иначе github сделает первый коммит, будет конфликт коммитов и нельзя будет сделать git push
git remote add origin https://github.com/Gelignite87/RED-Group_workout-app.git // регистрируем удаленный репозиторий
git push -u origin main // отправляем main в удаленный репозиторий

    //GIT через git clone
Сначала создаем репозиторий на сайте
git clone https://github.com/Gelignite87/RED-Group_workout-app.git
переносим все файлы (без .git) в созданную папку, делаем коммит
git push -u origin main // отправляем main в удаленный репозиторий

    //Субмодули
В корне основного проекта выполняем команду:
git submodule add https://github.com/example/inner-repo.git <папка куда помещать субмодуль>
В корневой директории основного проекта появится файл .gitmodules, в котором будет храниться информация о добавленном субмодуле.
При клонировании основного репозитория, субмодули не клонируются автоматически. Чтобы инициализировать и скачать все субмодули после клонирования основного репозитория, необходимо выполнить: git submodule update --init --recursive
git pull для субмодуля делается на его основной ветке.
Если нужно удалить субмодуль: Удалить запись из .gitmodules и закоммитить изменения. Удалить саму папку субмодуля и закоммитить изменения в основном проекте.